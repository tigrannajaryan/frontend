os: osx
osx_image: xcode9.4

language: node_js
node_js:
  - "8.11.1"
conditions: v1

notifications:
  slack:
# madebeauty:secret_token
    secure: vJbc7xWQeNMcIli5cm7kTivKb3usejMW3tpqjG/Y5Mi4h/GBC4zV/TdUUZgLUIDhsRfTu7iODovs4Faw7/Rj8dul/EM6/1DGYvDc2J737T0hTI+GxnWjgp8DfaZ9EGuv/tuRj8/BM8grJt+py4bvD+YBsxUN/mcmnMORnN1zIxtu6MZJH3VejiGmjde0lM1YilI8NP1kOM7JE3d7+1tQ2zTiK4nyJ7cnjhpTJs6T7rQEtwxOshEnkKryMwdNeqc2OPAttx/lPEhG9F6N6z3WETW6iqKsvv5/UebrneL+xXgKEc0ayCjUFtP/HwIiHElOIPutA9hCuWb+RFAxbZMHx6HrmZn+BeyWOAsx/369eCwwpIxTTtLcX6CmmXGR8aqF5bi56pcJOVt1LKHk89iD3SqHW0OZLuz6o2vjPnhhvWAHu+UH4cdPHjlVf7ohe3/Y9NSqo+UpfFGKrTqT8pQi73lgm/uV7YQEjrVpZ5k9bg7ey0oBgjYnhClTpGjJzGvmm4AH9UowU57M5w9rnwVxRCi3CiHjbfHDWkqKb3/bxEUx9QwTOpw+Y+Hux5tyZw8njhn5inFhy3du6fe7XHnTK4N20fupBBeC0sx7KPoN4oNSF+gq2sM1/Af6gXbPSU3mej9NIsgMD1cYqsL7brQhtsfqSLXQRW5uImb/zPmJq1k=

# Only run on develop branch and on pull requests against develop
branches:
  only:
    - develop

# cache packages after each build, and restore on next builds
# if a change is detected after build finishes - update cache

before_cache:
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/ || true
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock || true

cache:
  directories:
    - mobile/stylist/node_modules
    - mobile/client/node_modules
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

# global env variables, common to each build's environment
env:
  global:
    - IOS_SDK="iphoneos11.4"
    - ANDROID_SDK=android_sdk
    - ANDROID_BUILD_TOOLS_VERSION="28.0.1"
    - ANDROID_HOME="$TRAVIS_BUILD_DIR/$ANDROID_SDK"
    - JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home"
    - >-
        IOS_CODE_SIGN_IDENTITY="iPhone Distribution: BetterBeauty, Inc"
    # expands to IOS_DISTRIBUTION_CERT_PASSWORD=password
    - secure: "VUCYLUkexxWrobNg6Gt8PNiU4FXkcyPlO2xn/WfBelFr4TQszihUwfs54NHu10QS2Km5mq3o2g5MX1J6W7GJOs4AgqFTOKzCDOEoKS56meOXA17aFDkg3+O2nwUJPwYJjH8yaNBa7K0pTYIwFmUqa53Kd6TAWPT1iySxvRReZGbWVVyAEAw3jzin0xWKdarxE/dUvoSaAoWwo6MOGYUdE1fbJ5/v1ZD0yynckx3405va9uGeukgoMw+IZ/anqdeodUMJwFCxXhQkwr/8umudKHz4VNnpsfawrH7xBEKJCqZw+H825wZBoYa2rpMRnRbTd6tAxX2t2tDE5qHg/7kzYmvvOw6N1Z+NbxFA4Z3LefFXCeI6YHpawuNv+EYd7bdZea3PTJG53nAjBEdExJN/rIZMekQQ2Hb4SGaL9Nhs+vyxZwXJbdQjgpbNEGBBJZZPCLl9GrqebV3Q9Yfhmes9L7UY2ePpAwzYcF1v9yzfni1nB1MssKDa2vcR1+jIJt2wnI5uPheGdz+jDgokvdqNdusLHqDIFC5zjouI/x+h3Jyhnqic8kenRHNHeW0MQOUZmf+l0SXeeGFSn8TEr5FqBU4k4bQJqxFgYDflASHtlZ5U0HOt9oZtP57dAZ5/k36U5V0aO3EzmZ7lZudzQLdP+WVMVGBRi2TKumaMoMSa058="
    # $FASTLANE_USER; expands to FASTLANE_USER=itunes_email
    - secure: "UQ9MhRlgyPGq+7pujSwMgOJNnQcTtAZl/uGuRZTpXxap6bjz5SeCa0UzXtTvPqjXcWsIbjpSRuSl0gX2Ozk+SH+coPVu6HdVhIT3qmzBFZ/5kL7VWBikyPPAmPFxewgZbb7k+sY5wRLiSc3Y6lZtfQTpkew2ij9rLP8qQh2QF1uY+8yxpLyEiJzFZtHI+mvRngIJD1owG1XGNlOEjbUQoVrId/rNIYwU0laPXrTw36FCYnglx8BQPRo/9y7GrouuK9z7SCJJ1n1AqD2Ezap7I9m72RvbkuA42Oi6rFj1XdMO8eBODrNbgdxdzzlPhUaRIagbHPwqnvBoL2kWcIOur6UFM9foR8QcxhsxmThvPCbd1XyHtT0j8PCF9kr79oloPppXwnyiL3umN96Mg5ZFnZ1kATInd8ZsnYdDDTJvsHdWfrSrZfgo2OnLh7tnsm46LOuwTNbc5STN2CyApL5RPs/oGKXe1VT+pflfwQON217kB14U33Q9uQ+gkjVrySc/LieEt1cxNHQPxj/kBzzIaKx2KFoEcxfecICmJFN1mDhuCYLL5mPpv7uakf5B5nrWVbnNWZLdcd8Q3oZ1axNWSPsozMd8Bbqd5V66GAu0tcRqji0SIQexJMSsS671OK4+ojOv6NYTfh19+sNlS6QweaeAYAU5FEaf14bqb1bJbr4="
    # $FASTLANE_PASSWORD; expands to FASTLANE_PASSWORD=password
    - secure: "Aop9V/yACO3GxHqay7rklodUPOsnFax4neC4btWkEXab+Dkliu0/goyDn1Wm5JldevVaSY+TUn0kITows5DvsD2Zpn+cwp1PNfGLw8eQnCf38UEK3vL7rIRxkgFhMd7N+KFhYkfag5d21i/8A7iT7RF8GBDAC3QjLIfkGBR+fFW/hsfsMph4/bNKdjnNmanVWxugYKvMtA2ZpwA0hR186glYC0oOmksGR5s0WG3RkgFB4TamnVT8PhIiwCJA4E5iGK15C/gwsQ+2Y6dNP1+MMueLAQeMqFFdNSzq+EvX6mighmPJhXNjKZqOXE8o7bsPY7jYkZvEBFlnTVpOLOCZfEf1HjQgU0weiCZYCfTYczGg9Vs4ksIFjO847d00cUJqc6WuZ6qy/zoOXLgkR4stmOj4A4twcT4uhXjqoTvdkueMYWOtlcLO0tViTbLiHFXaoVLeMfuArDZj73JxwaQuUnzHeIhHzyQeVrMKQpDiqp7U+/L3gjlSxFp7MEJqClWV53RWcG0b7K4E5WsynnCde0EdpKsegG/bgXTJxdFpHWBHOOy2aj2iM6LdZPB6k+bXyIC0EpMaE6WOm8PrPxuDYlw2jnKwlqL5ZVSPb6CAE4S060XVXU2vqxuqmj7u4R9aQJvIGRyRpyxhIeb05lCJqwPSYNNVWzVMvorXIs2dS9g="

# define build stages order
stages:
  - Client Staging Build
  - Stylist Staging Build
  - Stylist Production Build
  - Client Production Build

# define which stages to include, and under which conditions
jobs:
  fast_finish: true
  include:
    - stage: Stylist Staging Build
      env:
        APP_TYPE=stylist
        MB_ENV=staging
        IOS_APP_BUNDLE_ID="com.madebeauty.stylist.beta"
        IOS_APP_NAME="Made Pro Staging"
        IOS_APP_DESCRIPTION="Fill up your days. Earn more."
        IOS_PROVISIONING_PROFILE="made-final-appstore"
        IOS_PROVISIONING_PROFILE_ID="b36b0583-9122-4176-becf-38d769edee4d"
        FB_APP_ID=1332946860139961
        FB_APP_NAME="Made Staging"
        FASTLANE_SKIP_WAITING=true
        FASTLANE_DISTRIBUTE_EXTERNAL=false

    - stage: Stylist Production Build
      if: branch = develop AND type = push  # run this stage only if it's not a PR
      env:
        APP_TYPE=stylist
        MB_ENV=prod
        IOS_APP_BUNDLE_ID="com.madebeauty.stylist.production"
        IOS_APP_NAME="Made Pro"
        IOS_APP_DESCRIPTION="Fill up your days. Earn more."
        IOS_PROVISIONING_PROFILE="made-final-appstore"
        IOS_PROVISIONING_PROFILE_ID="b36b0583-9122-4176-becf-38d769edee4d"
        FB_APP_ID=877860949068191
        FB_APP_NAME="Made"
        FASTLANE_SKIP_WAITING=true
        FASTLANE_DISTRIBUTE_EXTERNAL=false

    - stage: Client Staging Build
      env:
        APP_TYPE=client
        MB_ENV=staging
        IOS_APP_BUNDLE_ID="com.madebeauty.client.staging"
        ANDROID_APP_BUNDLE_ID="com.madebeauty.client.staging.android"
        IOS_APP_NAME="MadeBeauty Staging"
        IOS_APP_DESCRIPTION="MadeBeauty Staging"
        IOS_PROVISIONING_PROFILE="client-staging"
        IOS_PROVISIONING_PROFILE_ID="b76338ed-b7e9-4053-ab42-ec80d7eea4ba"
        FB_APP_ID=1332946860139961
        FB_APP_NAME="Made Staging"
        FASTLANE_SKIP_WAITING=true
        FASTLANE_DISTRIBUTE_EXTERNAL=false

    - stage: Client Production Build
      if: branch = develop AND type = push  # run this stage only if it's not a PR
      env:
        APP_TYPE=client
        MB_ENV=prod
        IOS_APP_BUNDLE_ID="com.madebeauty.client.production"
        ANDROID_APP_BUNDLE_ID="com.madebeauty.client.production.android"
        IOS_APP_NAME="MadeBeauty"
        IOS_APP_DESCRIPTION="MadeBeauty"
        IOS_PROVISIONING_PROFILE="client-production"
        IOS_PROVISIONING_PROFILE_ID="222754f3-76d8-4094-9da5-78e105d5f541"
        FB_APP_ID=877860949068191
        FB_APP_NAME="Made"
        FASTLANE_SKIP_WAITING=true
        FASTLANE_DISTRIBUTE_EXTERNAL=false


# run basic node / angular build and test
install: mobile/scripts/should-skip-build.sh || mobile/scripts/travis_install.sh

# prepare and build iOS app
script: mobile/scripts/should-skip-build.sh || mobile/scripts/travis_script.sh

before_deploy:
  # install fastlane - a tool which allows uploads to appStoreConnect
  # upload procedure uses proprietary Apple's protocol; fastlane is a
  # wide-known solution for handling this procedure
  - mobile/scripts/should-skip-build.sh || gem install fastlane --no-ri --no-rdoc --no-document

deploy:
  skip_cleanup: true
  # run deploy only if this is a merge to develop (e.g. branch is
  # `develop` and it's not a pull request validation build). Travis would set
  # `branch` variable to `develop` also in case if it's a PR build agains `develop`
  # branch, so we need an extra check against commit type
  on:
    branch: develop
    condition: $TRAVIS_PULL_REQUEST = false
  provider: script # indicates we'll run a bash script here
  # actually upload resulting Android and iOS app to Google.Play and appStoreConnect using fastlane
  script: mobile/scripts/should-skip-build.sh || mobile/scripts/deploy-mobile-apps.sh

after_script:
  # teardown and remove distribution certificate and provisioning profile
  - cd $TRAVIS_BUILD_DIR
  - mobile/scripts/remove-apple-profile.sh
  - mobile/scripts/remove-apple-certificate.sh
  - rm -f mobile/android-cert/*
