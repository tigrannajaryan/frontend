os: osx
osx_image: xcode9.4

language: node_js
node_js:
  - "8.11.1"
conditions: v1

notifications:
  slack:
    secure: Kp83hBovRKXyuBMCD73ofGVFSoh0RPJPELXwyR5gmulED2z5sXhpDvgC+SyLr0DVGKcPf+F4BPL3+3smsyBavC9eqAGmpyHnm9osptHpQoKXwHetZqD3WL4NA0u4MKusjJQHfjsAi+5rw9z/HdMw0tRCGIWmUSOfmXREMx0FbL4K1LohiDQBTymy/B+w+uNHTotUmA2y07bYeqrfYe+jVNsNHGPcZ458XKg0RiBlA10tR5nrfrOR3A3sMMIyoCzMBxR3ehF7vSGZWQo1ZwhlAkeHBVSRhOw+a+9s5V8kCSCMNcGFDbCNC/sUy9Bt6uZ8JxdxgyQ+u1OVL36NPwrfPH6j13F6gKEg5xL09KCc4wXfe++9LU2lWN2wrUokvFZmijjNZnQSFPSzoEN7AUn1BPX1VrIGFc7eFFAwcTY8/5ZhmdK6getmlKzJNZSa+rrDeZd/bnwA+nK7Ce5C0upbO/31ZOE4owL57u1D/68ESVmj/YxiWmrsC1h5RDFoMFuDBGwn0pSyaBm6ClnklzFdus3Kzz9nOARmA+FV0ZiWx4hcQG7gnVpgi8RxkGNKwSKVv2FHTwtMDokY7qDF11YWtrtQXKKS7Fw4xiilFNqAu9zyruECsSkYs3aaIMOzPn9jn0cPyS7epp0baBUkkgmdDOOE6QB2UmLhR/jHi3LRFEo=

# Only run on develop branch and on pull requests against develop
branches:
  only:
    - develop

# cache packages after each build, and restore on next builds
# if a change is detected after build finishes - update cache
cache:
  directories:
    - mobile/stylist/node_modules
    - mobile/client/node_modules

# global env variables, common to each build's environment
# once we add client build - some of them will go to appropriate stages
env:
  global:
    - IOS_SDK="iphoneos11.4"
    - IOS_PROVISIONING_PROFILE_ID="b36b0583-9122-4176-becf-38d769edee4d"
    - >-
        IOS_CODE_SIGN_IDENTITY="iPhone Distribution: BetterBeauty, Inc"
    # expands to IOS_DISTRIBUTION_CERT_PASSWORD=password
    - secure: "VUCYLUkexxWrobNg6Gt8PNiU4FXkcyPlO2xn/WfBelFr4TQszihUwfs54NHu10QS2Km5mq3o2g5MX1J6W7GJOs4AgqFTOKzCDOEoKS56meOXA17aFDkg3+O2nwUJPwYJjH8yaNBa7K0pTYIwFmUqa53Kd6TAWPT1iySxvRReZGbWVVyAEAw3jzin0xWKdarxE/dUvoSaAoWwo6MOGYUdE1fbJ5/v1ZD0yynckx3405va9uGeukgoMw+IZ/anqdeodUMJwFCxXhQkwr/8umudKHz4VNnpsfawrH7xBEKJCqZw+H825wZBoYa2rpMRnRbTd6tAxX2t2tDE5qHg/7kzYmvvOw6N1Z+NbxFA4Z3LefFXCeI6YHpawuNv+EYd7bdZea3PTJG53nAjBEdExJN/rIZMekQQ2Hb4SGaL9Nhs+vyxZwXJbdQjgpbNEGBBJZZPCLl9GrqebV3Q9Yfhmes9L7UY2ePpAwzYcF1v9yzfni1nB1MssKDa2vcR1+jIJt2wnI5uPheGdz+jDgokvdqNdusLHqDIFC5zjouI/x+h3Jyhnqic8kenRHNHeW0MQOUZmf+l0SXeeGFSn8TEr5FqBU4k4bQJqxFgYDflASHtlZ5U0HOt9oZtP57dAZ5/k36U5V0aO3EzmZ7lZudzQLdP+WVMVGBRi2TKumaMoMSa058="
    # $FASTLANE_USER; expands to FASTLANE_USER=itunes_email
    - secure: "UQ9MhRlgyPGq+7pujSwMgOJNnQcTtAZl/uGuRZTpXxap6bjz5SeCa0UzXtTvPqjXcWsIbjpSRuSl0gX2Ozk+SH+coPVu6HdVhIT3qmzBFZ/5kL7VWBikyPPAmPFxewgZbb7k+sY5wRLiSc3Y6lZtfQTpkew2ij9rLP8qQh2QF1uY+8yxpLyEiJzFZtHI+mvRngIJD1owG1XGNlOEjbUQoVrId/rNIYwU0laPXrTw36FCYnglx8BQPRo/9y7GrouuK9z7SCJJ1n1AqD2Ezap7I9m72RvbkuA42Oi6rFj1XdMO8eBODrNbgdxdzzlPhUaRIagbHPwqnvBoL2kWcIOur6UFM9foR8QcxhsxmThvPCbd1XyHtT0j8PCF9kr79oloPppXwnyiL3umN96Mg5ZFnZ1kATInd8ZsnYdDDTJvsHdWfrSrZfgo2OnLh7tnsm46LOuwTNbc5STN2CyApL5RPs/oGKXe1VT+pflfwQON217kB14U33Q9uQ+gkjVrySc/LieEt1cxNHQPxj/kBzzIaKx2KFoEcxfecICmJFN1mDhuCYLL5mPpv7uakf5B5nrWVbnNWZLdcd8Q3oZ1axNWSPsozMd8Bbqd5V66GAu0tcRqji0SIQexJMSsS671OK4+ojOv6NYTfh19+sNlS6QweaeAYAU5FEaf14bqb1bJbr4="
    # $FASTLANE_PASSWORD; expands to FASTLANE_PASSWORD=password
    - secure: "Aop9V/yACO3GxHqay7rklodUPOsnFax4neC4btWkEXab+Dkliu0/goyDn1Wm5JldevVaSY+TUn0kITows5DvsD2Zpn+cwp1PNfGLw8eQnCf38UEK3vL7rIRxkgFhMd7N+KFhYkfag5d21i/8A7iT7RF8GBDAC3QjLIfkGBR+fFW/hsfsMph4/bNKdjnNmanVWxugYKvMtA2ZpwA0hR186glYC0oOmksGR5s0WG3RkgFB4TamnVT8PhIiwCJA4E5iGK15C/gwsQ+2Y6dNP1+MMueLAQeMqFFdNSzq+EvX6mighmPJhXNjKZqOXE8o7bsPY7jYkZvEBFlnTVpOLOCZfEf1HjQgU0weiCZYCfTYczGg9Vs4ksIFjO847d00cUJqc6WuZ6qy/zoOXLgkR4stmOj4A4twcT4uhXjqoTvdkueMYWOtlcLO0tViTbLiHFXaoVLeMfuArDZj73JxwaQuUnzHeIhHzyQeVrMKQpDiqp7U+/L3gjlSxFp7MEJqClWV53RWcG0b7K4E5WsynnCde0EdpKsegG/bgXTJxdFpHWBHOOy2aj2iM6LdZPB6k+bXyIC0EpMaE6WOm8PrPxuDYlw2jnKwlqL5ZVSPb6CAE4S060XVXU2vqxuqmj7u4R9aQJvIGRyRpyxhIeb05lCJqwPSYNNVWzVMvorXIs2dS9g="

# define build stages order
stages:
  - Stylist Staging Build
  - Client Staging Build  # won't run until explicitly included into jobs
  - Stylist Production Build
  - Client Production Build  # won't run until explicitly included into jobs

# define which stages to include, and under which conditions
jobs:
  fast_finish: true
  include:
    - stage: Stylist Staging Build
      env:
        APP_TYPE=stylist
        BB_ENV=staging
        FB_APP_ID=1332946860139961
        FB_APP_NAME="Made Pro Staging"
        IOS_APP_BUNDLE_ID="com.madebeauty.stylist.beta"
        IOS_APP_DESCRIPTION="Made Pro Staging"
        IOS_APP_NAME="Made Pro Staging"
        FASTLANE_SKIP_WAITING=true
        FASTLANE_DISTRIBUTE_EXTERNAL=false

    - stage: Stylist Production Build
      if: branch = develop AND type = push  # run this stage only if it's not a PR
      env:
        APP_TYPE=stylist
        BB_ENV=prod
        FB_APP_ID=877860949068191
        FB_APP_NAME="Made Pro"
        IOS_APP_BUNDLE_ID="com.madebeauty.stylist.production"
        IOS_APP_DESCRIPTION="Made Pro"
        IOS_APP_NAME="Made Pro"
        FASTLANE_SKIP_WAITING=false
        FASTLANE_DISTRIBUTE_EXTERNAL='true --groups "MadeBeauty Staff"'

# TODO: placeholder for client builds
#    - stage: Client Staging Build
#      env:
#        APP_TYPE=client
#        BB_ENV=staging
#      script: true  # skip this step for now
#      install: true  # skip this step for now
#
#    - stage: Client Production Build
#      if: branch = develop AND type = push
#      env:
#        APP_TYPE=client
#        BB_ENV=prod

# run before install phase
before_install:
  - cd $TRAVIS_BUILD_DIR
  - cd mobile

# run basic node / angular build and test
install:
  - echo "install"
  - make -j8 build-stylist LOG=yes

# run before main script
before_script:
  - cd $TRAVIS_BUILD_DIR
  # restore encrypted distribution certificate file
  - openssl aes-256-cbc -K $encrypted_d801e47d7db5_key -iv $encrypted_d801e47d7db5_iv -in mobile/stylist/ios-cert/distribution.p12.enc -out mobile/stylist/ios-cert/distribution.p12 -d
  - mobile/scripts/install-apple-profile.sh
  # import distribution certificate to local keychain (required for XCode signing)
  - IOS_DISTRIBUTION_CERT_PASSWORD="$IOS_DISTRIBUTION_CERT_PASSWORD" mobile/scripts/install-apple-certificate.sh

script:
  # run coroova prepare and patch/amend necessary assets
  - mobile/scripts/prepare-stylist-app.sh
  # actually build, archive and export iOS application
  - mobile/scripts/build-stylist-app.sh

before_deploy:
  # install fastlane - a tool which allows uploads to appStoreConnect
  # upload procedure uses proprietary Apple's protocol; fastlane is a
  # wide-known solution for handling this procedure
  - gem install fastlane --no-ri --no-rdoc --no-document

deploy:
  skip_cleanup: true
  # run deploy only if this is a merge to develop (e.g. branch is
  # `develop` and it's not a pull request validation build). Travis would set
  # `branch` variable to `develop` also in case if it's a PR build agains `develop`
  # branch, so we need an extra check against commit type
  on:
    branch: develop
    condition: $TRAVIS_PULL_REQUEST = false
  provider: script # indicates we'll run a bash script here
  # actually upload resulting iOS app to appStoreConnect using fastlane
  script: mobile/scripts/deploy-ios-app.sh

after_script:
  # teardown and remove distribution certificate and provisioning profile
  - cd $TRAVIS_BUILD_DIR
  - mobile/scripts/remove-apple-profile.sh
  - mobile/scripts/remove-apple-certificate.sh
